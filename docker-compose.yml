services:
  # Frontend (Next.js)
  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_BACKEND_URL: http://backend:5000
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network

  # Backend (Express + PostgreSQL client)
  backend:
    build:
      context: ./backend
    ports:
      - "5000:5000"
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 60s
    networks:
      - app-network

  # Database (PostgreSQL)
  db:
    image: postgres:13-alpine
    env_file:
      - ./backend/.env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

# Networks and Volumes
networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
