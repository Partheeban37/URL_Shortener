# docker-compose.yml
services:
  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_BACKEND_URL: http://backend:5000
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      # Next.js App Router API route (see app/api/health/route.js)
      test: ["CMD-SHELL", "curl -fsS http://localhost:3000/api/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  backend:
    build:
      context: ./backend
    ports:
      - "5000:5000"
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      # backend/server.js `/health` route (must be defined BEFORE /:shortCode)
      test: ["CMD-SHELL", "curl -fsS http://localhost:5000/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  db:
    build:
      context: ./db
    env_file:
      - ./backend/.env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
